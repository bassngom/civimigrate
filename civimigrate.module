<?php 

abstract class Civimigrate extends Migration {
  
  protected $table;
  protected $query;
  protected $entity = 'contact';
  protected $debug = 0;
  public function __construct() {

    parent::__construct(MigrateGroup::getInstance('CiviCRM', array('default')));
    $this->destination = new MigrateDestinationCivicrmApi($this->entity);
    if($this->debug ==1){
      $this->destination->debug=1;
    }
  }
    
  /*
   * Get started DB object based on table
   */
  protected function getQuery($table,$alias, $idKey =""){
   
    $query = db_select( $table ,$alias);
    $fields = $this->gettableFields($table,$alias);
    foreach ($fields as $field) {
       if($field == $idKey){
        $query->addField($alias, $field);        
       }else{
       $query->addField($alias, $field, strtolower($alias . "_" . $field));
       }
    }
    return $query;
  }
  /*
   * Get all fields in table
   */  
  protected function gettableFields($table, $alias = ""){

    $fields = array();
    $sql = "SHOW COLUMNS FROM {$table}";
    $result = db_query($sql);
    drupal_set_message("<pre>". print_r($result,1) . "</pre>" );
    foreach ($result as $record) {
      $fields[] =   $record->field;
    }
    return $fields;
  }

  /*
   * Get all fields in table
   */  
  protected function addtableFields(&$query,$table, $alias = ""){
    if(empty($alias)){
      $alias = $table;
    }
    $fields = array();
    $sql = "SHOW COLUMNS FROM {$table}";
    $result = db_query($sql);
    foreach ($result as $record) {
      $query->addField($alias, $record->field, $alias . "_" . strtolower($record->field));
    }
  }
  
  /*
   * Convert Microsoft Timestamp to mysql friendly date.
   * @param string $ms_date MS date string
   * @param Bool $force Definitely needs conversion - by default function tests if it is already a valid timestamp
   * (this is in case data is inconsistently being sent through)
   * 
   */
   function mssql2mysql($ms_date, $force = 0)
   { 
     if(empty($ms_date)){
       return null;
     }
     if(!strtotime($ms_date) || $force)
     $timestamp = ($ms_date - 25569) * 86400;
     return date('Y-m-d',$timestamp);
   }

  
 }